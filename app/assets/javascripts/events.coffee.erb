# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/

window.load_remote_parts = ->
  $("[data-remote-load=true]").each ->
    div = $(this)
    #div.append('<%=image_tag "loading.gif" %><br /> <h5>Loading...</h5>')
    div.append('<br /> <h5>Loading...</h5>')
    $.get div.data("remote-url"), (data) ->
      div.html(data)
      drag_events()
      load_add_years_buttons()
      set_event_filters()
      set_scroll()
      change_year_display()
      set_remote_replace()
      
set_remote_replace = -> 
  $("[data-remote-replace=true]").unbind()
  $("[data-remote-replace=true]").click ->
    div = $(this).closest($(this).data("replace"))
    $.get $(this).data("remote-url"), (data) ->
      div.replaceWith(data)
      set_remote_replace()
      
load_add_years_buttons = ->
  $("#addearlieryears, #addlateryears").unbind "click"
  $("#addearlieryears").click (e) ->
    e.preventDefault()
    y = parseInt($("ul.years li:first").data("year"))
    $.get $(this).data("y-url"), {start_year: y - 10, end_year: y-1}, (data) ->
      $("ul.years").prepend(data)
      change_year_display(year_diff)
      
  $("#addlateryears").click (e) ->
    e.preventDefault()
    y = parseInt($("ul.years > li:last").data("year"))
    $.get $(this).data("y-url"), {start_year: y + 1, end_year: y+10}, (data) ->
      $("ul.years").append(data)
      change_year_display(year_diff)
    
      
next_date = (d, quanta) ->
  quanta = quanta || 1
  d_arr = d.match(/(.+?)-(.+)/)
  if parsed =  Date.parse(d_arr[2])
    return d_arr[1] + "-" + parsed.addHours(quanta).toString("MM-dd HH:mm")
  #if parseInt(d_arr[3]) < 28 
  #  return d_arr[1] + "-" + d_arr[2] + "-" + ("0"+(parseInt(d_arr[3]) + 1)).slice(-2)
  #else if parseInt(d_arr[2]) < 12
  #  return d_arr[1] + "-" + ("0"+(parseInt(d_arr[2]) + 1)).slice(-2) + "-01"
  #else
  #  return d
        
window.merge_timeslots = ->
  $("a.timeslot").each ->
    if $(this).next().hasClass("timeslot")
      $(this).next().remove()
      
set_droppable = (target) ->
  target.droppable
    activeClass: "ui-state-default"
    hoverClass: "ui-state-hover"
    drop: (event, ui) ->
      item = ui.draggable
      item.css {
        "top": 0,
        "left": 0
      }
      $(this).after item

      #Add timeslot after
      d = next_date($(this).data("date"))
      item.after $(this).clone().attr({
        "data-date": d
      })
      set_droppable item.next()
      merge_timeslots()
      
      #Update item
      $.post( $(".years").data("update-happened"), {id: item.data("id"), happened_on: $(this).data("date")}).fail ->
        alert "error"
        load_remote_parts()
      item.find(".when").text($(this).data("date"))
      

      item.prev().attr({
        "data-date": next_date(item.prev().data("date"), -1)
      })
      
drag_events = ->
  $(".event").draggable({ revert: "invalid" })
  set_droppable($(".timeslot"))
      
#Validations
failInput = (input, msg) ->
  unless $(input).next().text() is msg
    $(input).after "<span class=\"help-inline\">" + msg + "</span>"
    $(input).closest(".form-group").addClass "has-error"
  $(input).closest("form").find("[type=submit]").prop "disabled", true
clearInputHelp = (input) ->
  $(input).parent().find(".help-inline").remove()
  $(input).closest(".form-group").removeClass "has-error"
  $(input).closest("form").find("[type=submit]").prop "disabled", false      
window.setValidationCheck = ->
  $("[data-validate]").on "keyup change", ->
    clearInputHelp this
    $(this).closest("form").find("[data-validate]").each ->
      input = this
      validations = $(this).data("validate").split(" ")
      $.each validations, (index, val) ->
        switch val
          when "presence"
            failInput input, "Can not be blank"  if input.value.length < 1
          when "checked"
            failInput input, "" if $(input).prop("checked") == false
          when "remote"
            url = $(input).data("remote-url")
            if url
              $.post url,
                val: input.value
                id: $(input).data("id")
              , (data) ->
                failInput input, data.msg  unless data.success


set_event_filters = ->
  $(".filter_list input[type=checkbox]").change ->
    checked = $(".filter_list input:checked")
    if checked.length > 0
      $(".event").hide()
      $(".event").next().hide()
      shown = $(".event")
      checked.each ->
        shown = shown.filter $("[data-tags~='" + $(this).data("slug") + "'], [data-chars~='" + $(this).data("slug") + "']")
      shown.show()
      shown.next().show()
    else
      $(".event").show()  
      $(".event").next().show()
      
set_select2 = ->
  $.get $("#tag_list").data('remote-url') + ".json", (data) ->
    $(".select2_me").select2
      placeholder: "Comma separated list of tags"
      selectOnBlur: true,
      createSearchChoice: (term, data) ->
          if $(data).filter(->
            this.text.localeCompare(term) is 0
          ).length is 0
            id: term
            text: term
      multiple: true
      data: data
      initSelection: (element, callback) ->
        data = []
        $(element.val().split(",")).each ->
          data.push
            id: this
            text: this
        callback data
        
    
  $(".select2-choices").addClass("form-control")

window.set_event_edit_modals = ->
  $("#new_event_modal, #edit_event_modal").on "show.bs.modal", (event) ->
    button = $(event.relatedTarget) 
    modal = $(this)
    $.get button.data("e-url"), (data) ->
      modal.find(".modal-body").html(data)
      modal.find("#event_set_happened").val(button.data("date")) if button.data("date")
      setValidationCheck()
      set_select2()
        
  $("#new_event_modal, #edit_event_modal").on 'hide.bs.modal', (e) ->
    #if !confirm("Any changes will be lost. Are you sure you want to close this box?")
    #  e.preventDefault()
    tinyMCE.editors=[];

year_diff = 0
change_year_display = (diff) ->
  diff = diff || year_diff
  $("ul.years > li a.year").each ->
    $(this).html ($(this).closest("li").data("year") - diff)
    $(this).after( "<small class='o_year'>" + $(this).closest("li").data("year") + "</small>") if !$(this).next().hasClass("o_year")
  $("#year_display").modal('hide')
  
scroll_here = (to_here) ->
  $("html, body").animate
    scrollTop: $(to_here).offset().top - ($( window ).height()/ 2 ) + 100
  , 500
set_scroll = ->
  $("ul.scroll_to a").click -> 
    scroll_here($(this).attr("href"))
  
first_load = false
$(document).ajaxStop ->
  if $("#events_index").length > 0 && !first_load 
    scroll_here(".start_story")
    first_load = true
    
$(document).ready ->
  if $("#events_index").length > 0
    #Show start date modal if it doesn't already exist
    $("#start_event[data-new='true']").modal()
    
    set_event_edit_modals()
      
    $("#year_display").on "show.bs.modal", (event) ->
      $(this).find("#original_year").text($(event.relatedTarget).closest("li").data("year"))
      $(this).find("#year_as").val($(event.relatedTarget).text())
    
    $("#year_display #char_age_list a").click (e)->
      e.preventDefault()
      diff=parseInt($("#char_age_list").data("start")) - parseInt($(this).closest(".modal").find("#original_year").text())
      $(this).closest(".modal").find("#year_as").val($(this).data("age") - diff)
    
    $("#year_display input[type=submit]").click (e)->
      e.preventDefault()
      year_diff = parseInt($(this).closest(".modal").find("#original_year").text()) - parseInt($("#year_display #year_as").val())
      change_year_display()
      
    load_remote_parts()
    
    $(".modal").on "show.bs.modal", (event) ->
      if (url = $(event.relatedTarget).data("remote-url"))
        modal = $(this)
        $.get url, (data) ->
          modal.find(".modal-body").html(data)
          set_remote_replace()
    
      
    $("#sidenav").sticky({topSpacing: "100px"});
    $("#sidenav").css({height: $(window).height() - $(".navbar").height() - 50})
  
  if $("#events_index, #characters_show")
    $("#expand_event_button").click (e)->
      e.preventDefault()
      $(".panel-body").collapse("show")
    
    $("#collapse_event_button").click (e)->
      e.preventDefault()
      $(".panel-body").collapse("hide")
    
    
    